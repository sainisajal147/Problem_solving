#include <stdio.h>
#include <cmath>
#include <map>
#include <math.h>
#include <cstdio>
#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <stack>
#include <queue>
#include <bits/stdc++.h>

using namespace std;

typedef long long int ll;

void disp(vector<int> v)
{
		for(int j=0;j<v.size();j++)
		{
			cout<<v[j]<<" ";
		}
		cout<<endl;
}

bool sol(vector<int> A,int i, int n)
{
    if(i==n-1)
       return 1;
    else if(i>=n)
        return 0;
    for(int j=1;j<=A[i];j++)
    {
        if(sol(A,j,n))
            return true;
    }
    return true;
}
int canJump(vector<int> &A) {
    if(A.size()==1)
    	return 0;
    int i=0,n=A.size();
    vector<int> a(n,0);
    //if(!A.empty() and A[0])
    a[n-1]=1;
    for(int i=n-2;i>=0;i--)
    {
        //cout<<i+A[i]<<endl;
        if(i+A[i]>=n-1)
            a[i]=1;
        else
        {
            for(int j=i+1;j<=i+A[i] and j<n;j++)
            {
                if(a[j])
                {
                	if(a[i]==0)
                    	a[i]=1+a[j];
                    else
                    {
                    	if(1+a[j]<a[i])
                    		a[i]=1+a[j];
                    }
                }
            }
        }
    }
    /*while(i<n)
    {
        if(A[i]==0)
            return 0;
        if(i+A[i]<n)
        {
            i=i+A[i];
        }
    }
    return 1;*/
    //disp(a);
    if(!a[0])
    	return -1;
    return a[0];
}


int main() {
	std::vector<int> v={3,2,1,0,4};//{12, 29, 0, 14, 0, 0, 0, 1, 0, 0, 9, 0, 0, 0, 0, 0, 25, 0, 14, 0, 20, 0, 0, 11, 0, 0, 0, 0, 6, 0, 0, 0, 0, 11, 7, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 16, 3, 0, 0, 16, 0, 0, 0, 0, 5, 8, 29, 0, 0, 27, 0, 0, 15, 0, 1, 0, 26, 0, 20, 0, 0, 29, 0, 0, 0, 19, 0, 25, 5, 0, 0, 0, 5, 4, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 29, 28, 7, 13, 0, 14, 0, 0, 0, 0, 7, 0, 16, 6, 18, 4, 0, 0, 0, 18, 0, 24, 0, 28, 29, 0, 27, 0, 1, 0, 0, 17, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 17, 5, 0, 0, 17, 0, 6, 7, 0, 0, 22, 0, 0, 0, 0, 0, 0, 22, 0, 0, 3, 0, 0, 17, 0, 0, 0, 22, 3, 0, 3, 12, 0, 0, 0, 26, 0, 0, 0, 0, 16, 0, 0, 0, 28, 4, 16, 0, 0, 0, 0, 12, 0, 11, 25, 8, 0, 0, 0, 0, 30, 30, 1, 26, 2, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 0, 27, 14, 8, 9, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 23, 0, 0, 0, 0, 8, 30, 0, 20, 0, 0, 0, 10, 5, 0, 0, 5, 0, 0, 0, 2, 0, 0, 0, 6, 0, 0, 15, 11, 0, 11, 0, 0, 0, 3, 0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 14, 4, 0, 14, 27, 7, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 9, 21, 0, 22, 0, 0, 0, 2, 0, 0, 30, 0, 28, 0, 0, 0, 0, 0, 0, 0, 8, 12, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 0, 30, 17, 0, 0, 0, 0, 14, 27, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 10, 0, 0, 26, 0, 28, 8, 0, 0, 22, 24, 5, 0, 0, 17, 1, 0, 0, 0, 0, 0, 17, 0, 0, 0, 14, 0, 0, 0, 22, 17, 0, 10, 0, 1, 0, 0, 6, 0, 0, 0, 0, 0, 0, 24, 0, 0, 27, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 23, 0, 30, 0, 0, 24, 0, 0, 0, 0, 20, 28, 0, 0, 0, 0, 0, 0, 0, 6, 17, 0, 0, 0, 0, 24, 0, 0, 0, 0, 26, 0, 13, 0, 15, 0, 28, 22, 0, 19, 19, 5, 0, 21, 18, 6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 13, 0, 16, 0, 12, 0, 0, 21, 0, 0, 27, 9, 0, 0, 30, 5, 0, 18, 20, 7, 0, 0, 0, 26, 12, 8, 6, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 9, 4, 0, 0, 8, 24, 0, 0, 0, 0, 0, 28, 0, 15, 0, 0, 5, 0, 0, 7, 0, 11, 0, 0, 0, 11, 0, 0, 10, 8, 0, 22, 0, 0, 0, 8, 0, 22, 0, 0, 0, 0, 0, 0, 26, 0, 2, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 28, 14, 14, 0, 0, 27, 8, 13, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 29, 12, 4, 20, 0, 0, 0, 0, 0, 0, 0, 6, 0, 25, 0, 0, 10, 24, 3, 0, 19, 0, 0, 0, 14, 15, 0, 0, 4, 0, 0, 20, 23, 19, 0, 0, 7, 0, 21, 0, 0, 0, 0, 10, 0, 23, 0, 19, 0, 0, 0, 0, 22, 0, 1, 0, 0, 4, 10, 0, 21, 0, 0, 23, 29, 0, 0, 5, 0, 0, 0, 0, 0, 29, 15, 0, 10, 0, 0, 0, 10, 0, 0, 0, 0, 15, 29, 27, 12, 22, 25, 0, 0, 0};
	cout<<canJump(v);
	return 0;
}